buildscript {
    ext {
        kotlinVersion = '1.2.61'
        kotlinCoroutinesVersion = '0.25.0'

        springBootVersion = '2.0.4.RELEASE'

        vavrVersion = '0.9.2'
        funktionaleVersion = '1.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example.practice.java.modern.tech.sandbox'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
kotlin {
    experimental {
        coroutines 'enable'
    }
}


repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    /*
     * modern libs: Reactive/Kotlin Coroutines
     */
    implementation 'io.reactivex.rxjava2:rxjava'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    // https://github.com/Kotlin/kotlinx.coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}"
    // kotlinx.coroutines integration
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${kotlinCoroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${kotlinCoroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:${kotlinCoroutinesVersion}"

    /*
     * FP dependencies
     */
    implementation "io.vavr:vavr:${vavrVersion}"
    implementation "io.vavr:vavr-kotlin:${vavrVersion}"
    implementation 'org.jooq:jool-java-8:0.9.14'
    // funktionale
    implementation "org.funktionale:funktionale-collections:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-complement:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-composition:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-currying:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-either:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-memoization:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-option:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-pairing:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-partials:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-pipe:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-reverse:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-state:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-try:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-utils:${funktionaleVersion}"
    implementation "org.funktionale:funktionale-validation:${funktionaleVersion}"


    /*
     * test dependencies
     */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

configurations {
    all*.exclude module: 'kotlin-stdlib-jre7'
    all*.exclude module: 'kotlin-stdlib-jre8'
}
